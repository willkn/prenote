{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      prenote1Contents: '',\n      prenote2Contents: ''\n    };\n  },\n  methods: {\n    handlePrenote1Upload(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.prenote1Contents = reader.result;\n      };\n      reader.readAsText(file);\n    },\n    handlePrenote2Upload(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.prenote2Contents = reader.result;\n      };\n      reader.readAsText(file);\n    },\n    submit: function () {\n      axios.post('http://localhost:5000/prenote', {\n        prenote1: this.prenote1Contents,\n        prenote2: this.prenote2Contents\n      }, {\n        responseType: 'arraybuffer' // indicate that you are expecting a binary response\n      }).then(function (response) {\n        const today = new Date();\n        const day = today.getDate();\n        const month = today.toLocaleString('default', {\n          month: 'short'\n        });\n\n        // create a blob from the response array buffer\n        const blob = new Blob([response.data], {\n          type: 'application/pdf'\n        });\n        // create a link to download the file\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = 'prenote2' + \"_\" + day + \"_\" + month + '.pdf';\n        // append the link to the document and click it to download the file\n        document.body.appendChild(link);\n        link.click();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","prenote1Contents","prenote2Contents","methods","handlePrenote1Upload","event","file","target","files","reader","FileReader","onload","result","readAsText","handlePrenote2Upload","submit","post","prenote1","prenote2","responseType","then","response","today","Date","day","getDate","month","toLocaleString","blob","Blob","type","link","document","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","catch","error","console","log"],"sources":["/home/will/workspace/prenote/prenote-front/src/components/HomePage.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>PRENOTE</h1>\n\n    <label for=\"prenote1\">Prenote 1:</label>\n    <input type=\"file\" id=\"prenote1\" @change=\"handlePrenote1Upload\">\n\n    <label for=\"prenote2\">Prenote 2:</label>\n    <input type=\"file\" id=\"prenote2\" @change=\"handlePrenote2Upload\">\n    <br>\n    <button @click=\"submit\">submit</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      prenote1Contents: '',\n      prenote2Contents: '',\n    }\n  },\n  methods: {\n    handlePrenote1Upload(event) {\n      const file = event.target.files[0]\n      const reader = new FileReader()\n      reader.onload = () => {\n        this.prenote1Contents = reader.result\n      }\n      reader.readAsText(file)\n    },\n    handlePrenote2Upload(event) {\n      const file = event.target.files[0]\n      const reader = new FileReader()\n      reader.onload = () => {\n        this.prenote2Contents = reader.result\n      }\n      reader.readAsText(file)\n    },\n\n    submit: function () {\n      axios.post('http://localhost:5000/prenote', {\n        prenote1: this.prenote1Contents,\n        prenote2: this.prenote2Contents\n      }, {\n        responseType: 'arraybuffer' // indicate that you are expecting a binary response\n      })\n        .then(function (response) {\n\n          const today = new Date();\n          const day = today.getDate();\n          const month = today.toLocaleString('default', { month: 'short' });\n\n          // create a blob from the response array buffer\n          const blob = new Blob([response.data], { type: 'application/pdf' });\n          // create a link to download the file\n          const link = document.createElement('a');\n          link.href = window.URL.createObjectURL(blob);\n          link.download = 'prenote2' + \"_\" + day + \"_\" + month + '.pdf';\n          // append the link to the document and click it to download the file\n          document.body.appendChild(link);\n          link.click();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n}\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"AAeA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,EAAE;MACpBC,gBAAgB,EAAE;IACpB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,oBAAoBA,CAACC,KAAK,EAAE;MAC1B,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MACjC,MAAMC,MAAK,GAAI,IAAIC,UAAU,EAAC;MAC9BD,MAAM,CAACE,MAAK,GAAI,MAAM;QACpB,IAAI,CAACV,gBAAe,GAAIQ,MAAM,CAACG,MAAK;MACtC;MACAH,MAAM,CAACI,UAAU,CAACP,IAAI;IACxB,CAAC;IACDQ,oBAAoBA,CAACT,KAAK,EAAE;MAC1B,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MACjC,MAAMC,MAAK,GAAI,IAAIC,UAAU,EAAC;MAC9BD,MAAM,CAACE,MAAK,GAAI,MAAM;QACpB,IAAI,CAACT,gBAAe,GAAIO,MAAM,CAACG,MAAK;MACtC;MACAH,MAAM,CAACI,UAAU,CAACP,IAAI;IACxB,CAAC;IAEDS,MAAM,EAAE,SAAAA,CAAA,EAAY;MAClBhB,KAAK,CAACiB,IAAI,CAAC,+BAA+B,EAAE;QAC1CC,QAAQ,EAAE,IAAI,CAAChB,gBAAgB;QAC/BiB,QAAQ,EAAE,IAAI,CAAChB;MACjB,CAAC,EAAE;QACDiB,YAAY,EAAE,aAAY,CAAE;MAC9B,CAAC,EACEC,IAAI,CAAC,UAAUC,QAAQ,EAAE;QAExB,MAAMC,KAAI,GAAI,IAAIC,IAAI,EAAE;QACxB,MAAMC,GAAE,GAAIF,KAAK,CAACG,OAAO,EAAE;QAC3B,MAAMC,KAAI,GAAIJ,KAAK,CAACK,cAAc,CAAC,SAAS,EAAE;UAAED,KAAK,EAAE;QAAQ,CAAC,CAAC;;QAEjE;QACA,MAAME,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACR,QAAQ,CAACrB,IAAI,CAAC,EAAE;UAAE8B,IAAI,EAAE;QAAkB,CAAC,CAAC;QACnE;QACA,MAAMC,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAG,GAAIC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACT,IAAI,CAAC;QAC5CG,IAAI,CAACO,QAAO,GAAI,UAAS,GAAI,GAAE,GAAId,GAAE,GAAI,GAAE,GAAIE,KAAI,GAAI,MAAM;QAC7D;QACAM,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC;QAC/BA,IAAI,CAACU,KAAK,EAAE;MACd,CAAC,EACAC,KAAK,CAAC,UAAUC,KAAK,EAAE;QACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}